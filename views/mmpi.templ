package views

import "github.com/Francesco99975/shorehamex/internal/models"
import "strconv"
import "github.com/Francesco99975/shorehamex/views/layouts"
import "github.com/Francesco99975/shorehamex/views/components"

templ MMPI(site models.Site, admin bool, questions []string, page int, path string) {
	@layouts.CoreHTML(site) {
		@components.Header(admin)
		<main class="flex w-full md:w-2/3 flex-col items-start justify-between p-2 mt-5 md:self-center">
			<h1 class="text-3xl text-blue-900 mb-5">
				MMPI-2
			</h1>
			<form
 				id="fq"
 				class="w-full flex flex-col items-start justify-center"
 				class="w-full"
 				hx-post={ path }
 				hx-replace-url="true"
 				hx-indicator="#indicator"
			>
				if admin && page == 1 {
					@components.StringInput("patient", "text", "Patient Name", true)
				}
				if page == 1 {
					@components.SexRadioField("sex", "What is your Sex", true)
				}
				@MMPIFormPartial(questions, page, "")
			</form>
		</main>
	}
}

templ MMPIFormPartial(questions []string, page int, pid string) {
	<input type="hidden" id="duration" name="duration" value="0"/>
	<input type="hidden" id="page" name="page" value={ strconv.Itoa(page) }/>
	if page > 1 {
		<input type="hidden" id="pid" name="pid" value={ pid }/>
	}
	for index, question := range questions {
		@components.BoolRadioField(strconv.Itoa(page)+"A"+strconv.Itoa(index), question, true)
	}
	<button
 		type="submit"
 		class="w-full mt-5 bg-green-900 text-white text-lg text-center font-bold p-2 rounded-sm"
	>
		if page == 23 {
			Submit
		} else {
			Continue to page { strconv.Itoa(page + 1) } / 23
		}
	</button>
	<script>
            // Capture the start time when the page loads
            var startTime = new Date().getTime();

            // Add a submit event listener to the form
            for (const el of document.querySelectorAll('input[type="radio"]')) {
                el.addEventListener("change", function() {
                    // Calculate the time spent on the page
                    var endTime = new Date().getTime();
                    var timeSpent = endTime - startTime;

                    // Update duration on hidden element
                    var timeInput = document.getElementById("duration")
                    timeInput.value = timeSpent;
                });
            }
      </script>
}
